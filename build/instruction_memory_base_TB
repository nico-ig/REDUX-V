#! /usr/bin/vvp
:ivl_version "11.0 (stable)";
:ivl_delay_selection "TYPICAL";
:vpi_time_precision - 15;
:vpi_module "/usr/lib/x86_64-linux-gnu/ivl/system.vpi";
:vpi_module "/usr/lib/x86_64-linux-gnu/ivl/vhdl_sys.vpi";
:vpi_module "/usr/lib/x86_64-linux-gnu/ivl/vhdl_textio.vpi";
:vpi_module "/usr/lib/x86_64-linux-gnu/ivl/v2005_math.vpi";
:vpi_module "/usr/lib/x86_64-linux-gnu/ivl/va_math.vpi";
S_0x563a81145ed0 .scope module, "instruction_memory_TB" "instruction_memory_TB" 2 3;
 .timescale -15 -15;
v0x563a811665f0_0 .var "clk", 0 0;
v0x563a811666c0_0 .var "data", 7 0;
v0x563a81166780_0 .net "instruction", 7 0, v0x563a811662e0_0;  1 drivers
v0x563a81166880 .array "irom_TB", 255 0, 7 0;
v0x563a81166920_0 .var/i "memory_file", 31 0;
v0x563a81166a50_0 .var "pc", 7 0;
E_0x563a81144a20 .event edge, v0x563a81166200_0;
S_0x563a81146060 .scope begin, "$ivl_for_loop0" "$ivl_for_loop0" 2 27, 2 27 0, S_0x563a81145ed0;
 .timescale -15 -15;
v0x563a81136ed0_0 .var "i", 8 0;
S_0x563a81165ea0 .scope module, "DUT" "instruction_memory" 2 16, 3 1 0, S_0x563a81145ed0;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "clk";
    .port_info 1 /INPUT 8 "pc";
    .port_info 2 /OUTPUT 8 "instruction";
P_0x563a8112fd90 .param/l "MEMORY_BITS" 0 3 2, +C4<00000000000000000000000000001000>;
P_0x563a8112fdd0 .param/l "MEMORY_SIZE" 0 3 3, +C4<00000000000000000000000100000000>;
v0x563a81166200_0 .net "clk", 0 0, v0x563a811665f0_0;  1 drivers
v0x563a811662e0_0 .var "instruction", 7 0;
v0x563a811663c0 .array "irom", 255 0, 7 0;
v0x563a81166490_0 .net "pc", 7 0, v0x563a81166a50_0;  1 drivers
E_0x563a81143ec0 .event posedge, v0x563a81166200_0;
    .scope S_0x563a81165ea0;
T_0 ;
    %vpi_call 3 13 "$readmemh", "instruction_memory.rom", v0x563a811663c0 {0 0 0};
    %end;
    .thread T_0;
    .scope S_0x563a81165ea0;
T_1 ;
    %wait E_0x563a81143ec0;
    %load/vec4 v0x563a81166490_0;
    %pad/u 10;
    %ix/vec4 4;
    %load/vec4a v0x563a811663c0, 4;
    %xor/r;
    %cmpi/e 1, 1, 1;
    %jmp/0xz  T_1.0, 6;
    %pushi/vec4 0, 0, 8;
    %store/vec4 v0x563a811662e0_0, 0, 8;
    %jmp T_1.1;
T_1.0 ;
    %load/vec4 v0x563a81166490_0;
    %pad/u 10;
    %ix/vec4 4;
    %load/vec4a v0x563a811663c0, 4;
    %store/vec4 v0x563a811662e0_0, 0, 8;
T_1.1 ;
    %jmp T_1;
    .thread T_1;
    .scope S_0x563a81145ed0;
T_2 ;
    %vpi_func 2 23 "$fopen" 32, "instruction_memory.rom", "r" {0 0 0};
    %store/vec4 v0x563a81166920_0, 0, 32;
    %load/vec4 v0x563a81166920_0;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_2.0, 4;
    %vpi_func 2 26 "$fopen" 32, "instruction_memory.rom", "w+" {0 0 0};
    %store/vec4 v0x563a81166920_0, 0, 32;
    %fork t_1, S_0x563a81146060;
    %jmp t_0;
    .scope S_0x563a81146060;
t_1 ;
    %pushi/vec4 0, 0, 9;
    %store/vec4 v0x563a81136ed0_0, 0, 9;
T_2.2 ;
    %load/vec4 v0x563a81136ed0_0;
    %cmpi/ne 256, 0, 9;
    %jmp/0xz T_2.3, 4;
    %load/vec4 v0x563a81136ed0_0;
    %pad/u 8;
    %store/vec4 v0x563a811666c0_0, 0, 8;
    %vpi_call 2 29 "$fdisplayh", v0x563a81166920_0, v0x563a811666c0_0 {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x563a81136ed0_0;
    %pushi/vec4 1, 0, 9;
    %add;
    %store/vec4 v0x563a81136ed0_0, 0, 9;
    %jmp T_2.2;
T_2.3 ;
    %end;
    .scope S_0x563a81145ed0;
t_0 %join;
    %vpi_call 2 31 "$fclose", v0x563a81166920_0 {0 0 0};
    %vpi_call 2 32 "$display", "File instruction_memory.rom created, testbench must be re-run." {0 0 0};
    %vpi_call 2 33 "$finish" {0 0 0};
T_2.0 ;
    %vpi_call 2 36 "$fclose", v0x563a81166920_0 {0 0 0};
    %vpi_call 2 37 "$readmemh", "instruction_memory.rom", v0x563a81166880 {0 0 0};
    %end;
    .thread T_2;
    .scope S_0x563a81145ed0;
T_3 ;
    %vpi_call 2 41 "$dumpfile", "instruction_memory_TB.vcd" {0 0 0};
    %vpi_call 2 42 "$dumpvars", 32'sb00000000000000000000000000000000, S_0x563a81145ed0 {0 0 0};
    %end;
    .thread T_3;
    .scope S_0x563a81145ed0;
T_4 ;
    %vpi_call 2 46 "$monitor", "%10d    0x%02H    0x%02H    0x%02H      0x%02H", $time, v0x563a811665f0_0, v0x563a81166a50_0, v0x563a81166780_0, v0x563a811666c0_0 {0 0 0};
    %vpi_call 2 49 "$display", "\012### Test: instruction memory" {0 0 0};
    %vpi_call 2 50 "$display", "--------------------------------------------------------------------------------" {0 0 0};
    %vpi_call 2 51 "$display", "%10s %7s %6s %8s %7s", "TIME", "CLK", "PC", "INSTRUCTION", "EXPECTED" {0 0 0};
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x563a811665f0_0, 0, 1;
    %pushi/vec4 255, 0, 8;
    %store/vec4 v0x563a81166a50_0, 0, 8;
    %end;
    .thread T_4;
    .scope S_0x563a81145ed0;
T_5 ;
    %delay 4, 0;
    %load/vec4 v0x563a811665f0_0;
    %nor/r;
    %store/vec4 v0x563a811665f0_0, 0, 1;
    %jmp T_5;
    .thread T_5;
    .scope S_0x563a81145ed0;
T_6 ;
    %wait E_0x563a81144a20;
    %load/vec4 v0x563a811665f0_0;
    %cmpi/e 0, 0, 1;
    %jmp/0xz  T_6.0, 4;
    %load/vec4 v0x563a81166a50_0;
    %addi 1, 0, 8;
    %store/vec4 v0x563a81166a50_0, 0, 8;
    %load/vec4 v0x563a81166a50_0;
    %pad/u 10;
    %ix/vec4 4;
    %load/vec4a v0x563a81166880, 4;
    %xor/r;
    %cmpi/e 1, 1, 1;
    %flag_mov 8, 6;
    %jmp/0 T_6.2, 8;
    %pushi/vec4 0, 0, 8;
    %jmp/1 T_6.3, 8;
T_6.2 ; End of true expr.
    %load/vec4 v0x563a81166a50_0;
    %pad/u 10;
    %ix/vec4 4;
    %load/vec4a v0x563a81166880, 4;
    %jmp/0 T_6.3, 8;
 ; End of false expr.
    %blend;
T_6.3;
    %store/vec4 v0x563a811666c0_0, 0, 8;
    %jmp T_6.1;
T_6.0 ;
    %delay 1, 0;
    %load/vec4 v0x563a81166780_0;
    %load/vec4 v0x563a811666c0_0;
    %cmp/ne;
    %jmp/0xz  T_6.4, 6;
    %vpi_call 2 67 "$fatal", 32'sb00000000000000000000000000000000, "ASSERTION FAILED -- expected: 0x%02H, actual: 0x%02H", v0x563a811666c0_0, v0x563a81166780_0 {0 0 0};
T_6.4 ;
    %load/vec4 v0x563a81166a50_0;
    %cmpi/e 255, 0, 8;
    %jmp/0xz  T_6.6, 4;
    %vpi_call 2 66 "$display" {0 0 0};
    %vpi_call 2 67 "$finish" {0 0 0};
T_6.6 ;
T_6.1 ;
    %jmp T_6;
    .thread T_6, $push;
# The file index is used to find the file name in the following table.
:file_names 4;
    "N/A";
    "<interactive>";
    "../instruction_memory/instruction_memory_TB.v";
    "../instruction_memory/instruction_memory.v";
